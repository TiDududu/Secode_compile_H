Primary functionality: This contract implements ERC20 token standard with additional functionality for burning tokens and transferring ownership.

1. totalSupply(): Returns the total supply of tokens.
2. balanceOf(address _owner): Returns the balance of the specified address.
3. transfer(address _to, uint256 _value): Transfers tokens from the sender's address to the specified address.
4. allowance(address _owner, address _spender): Returns the amount which _spender is still allowed to withdraw from _owner.
5. transferFrom(address _from, address _to, uint256 _value): Allows a spender to transfer tokens from the specified address.
6. approve(address _spender, uint256 _value): Allows _spender to withdraw from the caller multiple times, up to the _value amount.
7. increaseApproval(address _spender, uint _addedValue): Increases the amount which _spender is still allowed to withdraw from the caller.
8. decreaseApproval(address _spender, uint _subtractedValue): Decreases the amount which _spender is still allowed to withdraw from the caller.
9. transferOwnership(address newOwner): Transfers the ownership of the contract to a new owner.
10. burn(uint256 _value): Burns tokens from the sender's address.

The contract also includes SafeMath library for arithmetic operations to prevent overflow/underflow vulnerabilities.